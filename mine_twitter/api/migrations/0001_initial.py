# Generated by Django 5.1.2 on 2024-10-26 19:49

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dispositivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_dispositivo', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Hashtag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto_hashtag', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='UsuarioCustomizado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('foto_perfil', models.ImageField(blank=True, null=True, upload_to='')),
                ('perfil_verificado', models.BooleanField(default=False)),
                ('foto_capa', models.ImageField(blank=True, null=True, upload_to='')),
                ('bio', models.CharField(max_length=160)),
                ('data_aniversario', models.DateField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Postagem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_edicao', models.DateTimeField(auto_now=True)),
                ('texto_postagem', models.CharField(max_length=280)),
                ('postagem_fixada', models.BooleanField(default=False)),
                ('postagem_silenciada', models.BooleanField(default=False)),
                ('dispositivo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.dispositivo')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Midia_Postagem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('midia', models.TextField()),
                ('postagem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.postagem')),
            ],
        ),
        migrations.CreateModel(
            name='Mencao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_mencao', models.DateTimeField(auto_now_add=True)),
                ('usuario_mencionado', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('postagem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.postagem')),
            ],
        ),
        migrations.CreateModel(
            name='Hashtag_Postagem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hashtag', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.hashtag')),
                ('postagem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.postagem')),
            ],
        ),
        migrations.CreateModel(
            name='Curtida',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_curtida', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('postagem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.postagem')),
            ],
        ),
        migrations.CreateModel(
            name='Repostagem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto', models.CharField(blank=True, max_length=280, null=True)),
                ('postagem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.postagem')),
                ('repostagem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repostagem_repostagem', to='api.repostagem')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Midia_Repostagem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('midia', models.TextField()),
                ('postagem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.repostagem')),
            ],
        ),
        migrations.CreateModel(
            name='Seguidores',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_seguimento', models.DateTimeField(auto_now_add=True)),
                ('usuario_seguido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seguindo', to=settings.AUTH_USER_MODEL)),
                ('usuario_seguidor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seguidor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
